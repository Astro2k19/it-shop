<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="88513a37-58eb-4e32-a6e3-094d0c450523" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.editorconfig" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.eslintignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.github/workflows/ci.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.prettierignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.prettierrc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vscode/extensions.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api-e2e/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api-e2e/jest.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api-e2e/project.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api-e2e/src/api/api.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api-e2e/src/support/global-setup.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api-e2e/src/support/global-teardown.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api-e2e/src/support/test-setup.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api-e2e/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api-e2e/tsconfig.spec.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/jest.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/project.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/src/assets/.gitkeep" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/tsconfig.app.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/tsconfig.spec.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/api/webpack.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client-e2e/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client-e2e/cypress.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client-e2e/project.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client-e2e/src/e2e/app.cy.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client-e2e/src/fixtures/example.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client-e2e/src/support/app.po.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client-e2e/src/support/commands.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client-e2e/src/support/e2e.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client-e2e/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/index.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/project.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/public/favicon.ico" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/src/app/app.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/src/app/app.spec.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/src/app/app.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/src/app/nx-welcome.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/src/assets/.gitkeep" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/src/main.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/src/styles.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/tsconfig.app.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/tsconfig.spec.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apps/client/vite.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/jest.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/jest.preset.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/nx.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tsconfig.base.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/project.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/src/lib/ApiError.model.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/src/lib/Product.model.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/src/lib/Review.model.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/src/lib/User.model.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/types/tsconfig.lib.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/app.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/app.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/main.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/config/connectDatabase.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/config/connectDatabase.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/controllers/productsController.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/controllers/productsController.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/middlewares/asyncHandler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/middlewares/asyncHandler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/middlewares/errorMiddleware.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/middlewares/errorMiddleware.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/model/Product.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/model/Product.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/model/Review.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/model/Review.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/model/User.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/model/User.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/routes/products.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/routes/products.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/seeder/data.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/seeder/data.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/seeder/seeder.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/seeder/seeder.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/types/ApiError.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/types/global.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/types/global.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/utils/ApiFilters.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/utils/ApiFilters.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../backend/utils/ErrorHandler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/utils/ErrorHandler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../pnpm-lock.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../tsconfig.json" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ComposerSettings">
    <execution />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2dHXYtVMsoud9hdSOfhraZAN0lU" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "feature/authentication-authorization",
    "last_opened_file_path": "/Users/artemkatrushchenko/PhpstormProjects/it-shop/it-shop",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "ts.external.directory.path": "/Users/artemkatrushchenko/PhpstormProjects/it-shop/it-shop/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="ReactDesignerToolWindowState">
    <option name="myId2Visible">
      <map>
        <entry key="com.haulmont.rcb.reactInspector" value="false" />
      </map>
    </option>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/types/src/lib" />
      <recent name="$PROJECT_DIR$/apps/api/src" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/apps/api" />
    </key>
  </component>
  <component name="RunManager" selected="npm.build:prod">
    <configuration name="client-e2e:e2e:production" type="NxRunConfigurationType">
      <option name="nx-projects" value="client-e2e" />
      <option name="nx-targets" value="e2e" />
      <option name="nx-target-configuration" value="production" />
      <envs />
      <option name="arguments" value="" />
      <method v="2" />
    </configuration>
    <configuration name="client:serve:development" type="NxRunConfigurationType">
      <option name="nx-projects" value="client" />
      <option name="nx-targets" value="serve" />
      <option name="nx-target-configuration" value="development" />
      <envs />
      <option name="arguments" value="" />
      <method v="2" />
    </configuration>
    <configuration name="build:prod" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="build:prod" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="start:dev" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="start:dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.build:prod" />
        <item itemvalue="npm.start:dev" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="88513a37-58eb-4e32-a6e3-094d0c450523" name="Changes" comment="" />
      <created>1709666027972</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1709666027972</updated>
      <workItem from="1709666029160" duration="5192000" />
      <workItem from="1709672037496" duration="143000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>